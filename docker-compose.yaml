services:
  api:
    build: .
    container_name: api
    restart: always
    command: sh -c "sleep 5 && pylint forum/forum || true &&
                    python forum/manage.py migrate &&
                    python forum/manage.py bulk_index_projects &&
                    python forum/manage.py collectstatic --noinput &&
                    python forum/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - mongo
      - redis
      - elasticsearch
    environment:
      - IN_DOCKER=true
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DJANGO_SETTINGS_MODULE=forum.settings
      - MONGO_URL=${MONGO_URL}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - REDIS_URL=${REDIS_URL}
  db:
    image: postgres:17.0-alpine
    container_name: db
    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: on-failure
    volumes:
      - ./mongo-data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin/data
    depends_on:
      - db

  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery
    restart: always
    command: sh -c "cd forum && celery -A forum worker --loglevel=info"
    volumes:
      - .:/usr/src
    depends_on:
      - db
      - redis
      - api
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  celery-flower:
    image: mher/flower:0.9.7  # Use a stable version
    container_name: celery-flower
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    command: --broker=${CELERY_BROKER_URL} --port=5555

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    restart: always
    depends_on:
      - api
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  postgres-data:
  mongo-data:
  pgadmin-data:
  esdata01:
